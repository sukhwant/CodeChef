#include<stdio.h>
 
#define SIZE 100000
 
int partition(int,int);
void quickSort(int,int);
 
int arr[SIZE];
 
int main()
{
	int i,j,k,test,N,K,sum1,sum2,max,result[101],other1,other2,diff1,diff2;
	scanf("%d",&test);
	for(k=0;k<test;k++)
	{
		sum1=0;
		sum2=0;
		max=0;
		scanf("%d%d",&N,&K);
		for(i=0;i<N;i++)
		{
			scanf("%d",&arr[i]);
			max=max+arr[i];
		}
		quickSort(0,N-1);
		
		j=N-1;
		for(i=0;i<K;i++)
		{
			sum1=sum1+arr[i];
			sum2=sum2+arr[j];
			j--;
		}
		other1=max-sum1;
		other2=max-sum2;
		
		if(other1>sum1)
			diff1=other1-sum1;
		else
			diff1=sum1-other1;
		
		if(other2>sum2)
			diff2=other2-sum2;
		else
			diff2=sum2-other2;
			
		if(diff1>diff2)
			result[k]=diff1;
		else
			result[k]=diff2;
	}
	for(i=0;i<test;i++)
		printf("%d\n",result[i]);
 
	
return 0;
}
 
void quickSort(int p,int r)
{
	int q;
	if(p<r)
	{
		q=partition(p,r);
		quickSort(p,q-1);
		quickSort(q+1,r);
	}
}
 
int partition(int p,int r)
{
	int x,i,j,temp;
	
	x=arr[r];
	i=p-1;
	for(j=p;j<=r-1;j++)
	{
		if(arr[j]<=x)
		{
			i=i+1;
			temp=arr[i];
			arr[i]=arr[j];
			arr[j]=temp;
		}
	}
	temp=arr[i+1];
	arr[i+1]=arr[r];
	arr[r]=temp;
	
	return i+1;
}
 
Comments 
